#!/usr/bin/env sh

function make_home () {
    local usage="$0 [-h <host>] [-x] [-c <configs-dir>]"
    usage="$usage\n\th: the remote host"
    usage="$usage\n\tc: the source configs directory (default: ~/configs/)"
    usage="$usage\n\tx: actually run commands (dry run by default)"

    local dry_run="true"
    local configs=(
        .zshrc
        .profile
        .zprofile
        .inputrc
        .bashrc
        .bash_profile
        .gitconfig
        .gitignore
        .config/nvim/init.vim
        .config/alacritty/alacritty.yml
        .tmux.conf
        .toprc
        .npmrc
    )

    local remote
    local host
    local configs_src
    local config

    if [ -d "$HOME/configs/" ]; then
        configs_src="$HOME/configs"
    else
        configs_src="$HOME"
    fi

    while getopts "hr:c:x" opt; do
        case $opt in
            h)
                echo "$usage"
                return 0
                ;;
            r)
                remote="true"
                host=$OPTARG
                ;;
            x)
                unset dry_run
                ;;
            c)
                configs_src=$OPTARG
                ;;
            \?)
                echo "$usage" >&2
                return 1
                ;;
        esac
    done

    function run () {
        echo "$ $*"
        if [ -z "$dry_run" ]; then
            eval $*
        fi
    }

    for config in "${configs[@]}"
    do
        local parent_dir="$(dirname "$config")"

        if [ "$parent_dir" = "." ]; then
            unset parent_dir
        fi

        if [ "$remote" ]; then
            if [ -n "$parent_dir" ]; then
                run ssh $host mkdir -p "'~/$(dirname $config)'"
            fi
            run scp "$configs_src/$config" $host:~/$config
        else
            if [ -n "$parent_dir" ]; then
                run mkdir -p "~/$(dirname $config)"
            fi
            run ln -sf "$configs_src/$config" "~/$config"
        fi
    done
}
export make_home

function set_nvim_listen_address {
    local server_name="default"
    local tmux_window=$(tmux display-message -p '#S-#I' 2> /dev/null)
    local i3_ws=$(i3-msg -t  get_workspaces 2> /dev/null| \
        python -mjson.tool 2> /dev/null | \
        grep -E '"focused":\s*true' -A 1 | \
        grep "name" | \
        cut -d '"' -f 4 2> /dev/null)

    if [ "$tmux_window" ]; then
        server_name="tmux-$tmux_window"
    elif [ "$i3_ws" ]; then
        server_name="i3-$i3_ws"
    fi

    # Set the NVIM listen address. Works for the server (launched via `nvim`)
    # and client (launched via `nvr`).
    export NVIM_LISTEN_ADDRESS=/tmp/nvim-${server_name:-$1}-vim.sock
}
export set_nvim_listen_address

function reload-shell () {
    source ~/.profile
    exec $SHELL
}
export reload_shell

set_nvim_listen_address
